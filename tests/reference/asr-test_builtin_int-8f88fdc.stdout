(TranslationUnit (SymbolTable 1 {_lpython_main_program: (Subroutine (SymbolTable 6 {}) _lpython_main_program [] [(SubroutineCall 1 check_all () [] ())] Source Public Implementation () .false. .false.), check_all: (Subroutine (SymbolTable 4 {}) check_all [] [(SubroutineCall 1 test_int () [] ()) (SubroutineCall 1 test_bool_to_int () [] ())] Source Public Implementation () .false. .false.), main_program: (Program (SymbolTable 5 {}) main_program [] [(SubroutineCall 1 _lpython_main_program () [] ())]), test_bool_to_int: (Subroutine (SymbolTable 3 {b: (Variable 3 b Local () () Default (Integer 4 []) Source Public Required .false.)}) test_bool_to_int [] [(= (Var 3 b) (BinOp (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Sub (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 3 b) (BinOp (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Sub (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 3 b) (BinOp (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Sub (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (UnaryOp USub (ConstantInteger 1 (Integer 4 [])) (Integer 4 []) (ConstantInteger -1 (Integer 4 []))) (Logical 4 []) () ()) ()) (= (Var 3 b) (BinOp (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Sub (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (ConstantInteger 1 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 3 b) (BinOp (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (ConstantInteger 2 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 3 b) (BinOp (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 3 b) (BinOp (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (ConstantInteger 1 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 3 b) (BinOp (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (ConstantInteger 1 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 3 b) (BinOp (BinOp (BinOp (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) Add (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) Sub (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (ConstantInteger 3 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 3 b) (BinOp (BinOp (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Add (BinOp (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) (Integer 4 []) () ()) Sub (BinOp (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) () ()) (Integer 4 []) () ()) ()) (Assert (Compare (Var 3 b) Eq (ConstantInteger 2 (Integer 4 [])) (Logical 4 []) () ()) ())] Source Public Implementation () .false. .false.), test_int: (Subroutine (SymbolTable 2 {f: (Variable 2 f Local () () Default (Real 8 []) Source Public Required .false.)}) test_int [] [(= (Var 2 f) (ConstantReal 5.678000 (Real 8 [])) ()) (Assert (Compare (ConstantInteger 0 (Integer 4 [])) Eq (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) (ConstantLogical .true. (Logical 4 [])) ()) ()) (Assert (Compare (Cast (ConstantReal 5.678000 (Real 8 [])) RealToInteger (Integer 4 []) (ConstantInteger 5 (Integer 4 []))) Eq (ConstantInteger 5 (Integer 4 [])) (Logical 4 []) (ConstantLogical .true. (Logical 4 [])) ()) ()) (Assert (Compare (Cast (Var 2 f) RealToInteger (Integer 4 []) ()) Eq (ConstantInteger 5 (Integer 4 [])) (Logical 4 []) () ()) ()) (= (Var 2 f) (UnaryOp USub (ConstantReal 183745.230000 (Real 8 [])) (Real 8 []) (ConstantReal -183745.230000 (Real 8 []))) ()) (Assert (Compare (Cast (UnaryOp USub (ConstantReal 183745.230000 (Real 8 [])) (Real 8 []) (ConstantReal -183745.230000 (Real 8 []))) RealToInteger (Integer 4 []) (ConstantInteger -183745 (Integer 4 []))) Eq (UnaryOp USub (ConstantInteger 183745 (Integer 4 [])) (Integer 4 []) (ConstantInteger -183745 (Integer 4 []))) (Logical 4 []) (ConstantLogical .true. (Logical 4 [])) ()) ()) (Assert (Compare (Cast (Var 2 f) RealToInteger (Integer 4 []) ()) Eq (UnaryOp USub (ConstantInteger 183745 (Integer 4 [])) (Integer 4 []) (ConstantInteger -183745 (Integer 4 []))) (Logical 4 []) () ()) ()) (Assert (Compare (Cast (ConstantReal 5.500000 (Real 8 [])) RealToInteger (Integer 4 []) (ConstantInteger 5 (Integer 4 []))) Eq (ConstantInteger 5 (Integer 4 [])) (Logical 4 []) (ConstantLogical .true. (Logical 4 [])) ()) ()) (Assert (Compare (Cast (UnaryOp USub (ConstantReal 5.500000 (Real 8 [])) (Real 8 []) (ConstantReal -5.500000 (Real 8 []))) RealToInteger (Integer 4 []) (ConstantInteger -5 (Integer 4 []))) Eq (UnaryOp USub (ConstantInteger 5 (Integer 4 [])) (Integer 4 []) (ConstantInteger -5 (Integer 4 []))) (Logical 4 []) (ConstantLogical .true. (Logical 4 [])) ()) ()) (Assert (Compare (Cast (ConstantLogical .true. (Logical 1 [])) LogicalToInteger (Integer 4 []) (ConstantInteger 1 (Integer 4 []))) Eq (ConstantInteger 1 (Integer 4 [])) (Logical 4 []) (ConstantLogical .true. (Logical 4 [])) ()) ()) (Assert (Compare (Cast (ConstantLogical .false. (Logical 1 [])) LogicalToInteger (Integer 4 []) (ConstantInteger 0 (Integer 4 []))) Eq (ConstantInteger 0 (Integer 4 [])) (Logical 4 []) (ConstantLogical .true. (Logical 4 [])) ()) ())] Source Public Implementation () .false. .false.)}) [])
